
    // ################################################################
    // 
    STAGE_MAIN
    {
        STAGE_ADD_PATH(pPath1)
        {
            pPath1->Reserve(2u);
            pPath1->AddNode(coreVector2(0.0f, 1.2f), coreVector2(0.0f,-1.0f) * 1.5f);
            pPath1->AddNode(coreVector2(0.0f, 0.9f), coreVector2(0.0f,-1.0f));
            //pPath1->AddNode(coreVector2(0.0f,-1.2f), coreVector2(0.0f,-1.0f) * 1.51f);
            pPath1->Refine();
        });

        STAGE_ADD_SQUAD(pSquad1, cScoutEnemy, 20u)
        {
            STAGE_FOREACH_ENEMY_ALL(pSquad1, pEnemy, i)
            {
                pEnemy->Configure(20, LERP(COLOR_SHIP_YELLOW, COLOR_SHIP_RED, I_TO_F(i & 0x03u) * 0.333f), true);
                pEnemy->Resurrect();
            });
        });

        STAGE_FOREACH_ENEMY(pSquad1, pEnemy, i)
        {
            STAGE_LIFETIME(pEnemy, 0.5f, 0.2f * I_TO_F(i))

            const coreVector2 vFactor = coreVector2(1.0f,1.0f);
            const coreVector2 vOffset = coreVector2(0.025f * I_TO_F(MIN(i + 8u, pSquad1->GetNumEnemies() - 1u - i + 4u)) * ((i & 0x04u) ? -1.0f : 1.0f), 0.0f);

            pEnemy->DefaultMovePath(pPath1, vFactor, vOffset, MIN(fLifeTime, pPath1->GetTotalDistance()));

            if(STAGE_LIFETIME_AFTER(0.0f) && STAGE_TICK(60u))
            {
                g_pGame->GetEnemyManager()->AttachFunction(pEnemy, 6u, 0.05f, pEnemy->NearestPlayer(), [](cEnemy* OUTPUT pEnemy, const coreUint8 iCurRepeat, const coreVariant16& oData)
                {
                    const coreVector2 vPos = pEnemy->GetPosition().xy();
                    const coreVector2 vDir = pEnemy->AimAtPlayer(oData.Get<cPlayer*>()).Normalized();

                    g_pGame->GetBulletManagerEnemy()->AddBullet<cOrbBullet>(5, 2.0f, pEnemy, vPos, vDir);
                });
            }
        });

        STAGE_FINISH_CLEARED
    });

    // ################################################################
    // 
    STAGE_MAIN
    {
        STAGE_ADD_PATH(pPath1)
        {
            pPath1->Reserve(3u);
            pPath1->AddNode(coreVector2(0.0f, 1.2f), coreVector2(0.0f,-1.0f) * 1.0f);
            pPath1->AddStop(coreVector2(0.0f, 0.9f), coreVector2(0.0f,-1.0f));
            pPath1->AddNode(coreVector2(0.0f,-1.2f), coreVector2(0.0f,-1.0f) * 1.5f);
            pPath1->Refine();
        });

        STAGE_ADD_PATH(pPath2)
        {
            pPath2->Reserve(2u);
            pPath2->AddNode(coreVector2(0.0f, 1.2f), coreVector2(0.0f,-1.0f) * 1.0f);
            pPath2->AddNode(coreVector2(0.0f,-1.2f), coreVector2(0.0f,-1.0f) * 1.5f);
            pPath2->Refine();
        });

        STAGE_ADD_SQUAD(pSquad1, cWarriorEnemy, 2u)
        {
            STAGE_FOREACH_ENEMY_ALL(pSquad1, pEnemy, i)
            {
                pEnemy->Configure(100, COLOR_SHIP_GREEN, true);
                pEnemy->Resurrect();
            });
        });

        STAGE_ADD_SQUAD(pSquad2, cScoutEnemy, 6u)
        {
            STAGE_FOREACH_ENEMY_ALL(pSquad2, pEnemy, i)
            {
                pEnemy->Configure(20, LERP(COLOR_SHIP_YELLOW, COLOR_SHIP_RED, I_TO_F(i) * RCP(I_TO_F(pSquad2->GetNumEnemies() - 1u))), true);
                pEnemy->Resurrect();
            });
        });

        STAGE_GET_START(2u)
        STAGE_GET_INT  (iSide)
        STAGE_GET_FLOAT(fStop, fStop = pPath1->TranslateDistance(1u, 0.0f))
        STAGE_GET_END

        STAGE_FOREACH_ENEMY(pSquad1, pEnemy, i)
        {
            STAGE_LIFETIME(pEnemy, 0.75f, 0.0f)

            //STAGE_DELAY_ADD(fStop, 5.0f)
            {
                STAGE_REMOVE_LIFETIME(pEnemy, pPath1->GetTotalDistance())

                const coreVector2 vFactor = coreVector2(1.0f,1.0f);
                const coreVector2 vOffset = coreVector2(i ? -0.5f : 0.5f, 0.0f);

                pEnemy->DefaultMovePath(pPath1, vFactor, vOffset, fLifeTime);
            }
            //STAGE_DELAY_RESET

            const coreVector2 vPos = pEnemy->GetPosition ().xy();
            const coreVector2 vDir = pEnemy->GetDirection().xy();
            const coreVector2 vTan = vDir.Rotated90();

            if(STAGE_LIFETIME_BETWEEN(0.2f, fStop + 5.0f) && STAGE_TICK(30u))
            {
                g_pGame->GetBulletManagerEnemy()->AddBullet<cWaveBullet>(5, 1.2f, pEnemy, vPos + vTan * (CONTAINS_BIT(iSide, i) ? -3.0f : 3.0f), vDir);
                TOGGLE_BIT(iSide, i)
            }
            else if(STAGE_LIFETIME_AFTER(fStop + 5.0f) && STAGE_TICK(15u))
            {
                g_pGame->GetBulletManagerEnemy()->AddBullet<cWaveBullet>(5, 1.2f, pEnemy, vPos,  vTan);
                g_pGame->GetBulletManagerEnemy()->AddBullet<cWaveBullet>(5, 1.2f, pEnemy, vPos, -vTan);
            }
        });

        STAGE_FOREACH_ENEMY(pSquad2, pEnemy, i)
        {
            STAGE_LIFETIME(pEnemy, 0.75f, 0.2f * I_TO_F(i) + 1.5f)

            STAGE_REMOVE_LIFETIME(pEnemy, pPath2->GetTotalDistance())

            const coreVector2 vFactor = coreVector2(1.0f,1.0f);
            const coreVector2 vOffset = coreVector2((i & 0x01u) ? -0.15f : 0.15f, 0.0f);

            pEnemy->DefaultMovePath(pPath2, vFactor, vOffset, fLifeTime);
        });

        STAGE_FINISH_CLEARED
    });

    // ################################################################
    // 
    //STAGE_START_HERE
    STAGE_MAIN
    {
        STAGE_ADD_PATH(pPath1)
        {
            pPath1->Reserve(2u);
            pPath1->AddNode(coreVector2(0.0f, 1.2f), coreVector2(0.0f,-1.0f));
            pPath1->AddNode(coreVector2(0.0f,-1.2f), coreVector2(0.0f,-1.0f) * 2.5f);
            pPath1->Refine();
        });

        STAGE_ADD_SQUAD(pSquad1, cScoutEnemy, 20u)
        {
            STAGE_FOREACH_ENEMY_ALL(pSquad1, pEnemy, i)
            {
                pEnemy->Configure(20, LERP(COLOR_SHIP_YELLOW, COLOR_SHIP_RED, I_TO_F(i % 4u) * 0.25f), true);
                pEnemy->Resurrect();
            });
        });

        STAGE_FOREACH_ENEMY(pSquad1, pEnemy, i)
        {
            STAGE_LIFETIME(pEnemy, 0.6f, 0.1f * I_TO_F(i))

            STAGE_REMOVE_LIFETIME(pEnemy, pPath1->GetTotalDistance())

            const coreVector2 vFactor = coreVector2(1.0f,1.0f);
            const coreVector2 vOffset = coreVector2((-0.1f * I_TO_F(i % 4u) - 0.1f + ((i >= 8u && i < 12) ? 0.2f : 0.0f)) * (((i / 4u) & 0x01u) ? -1.2f : 1.2f), 0.0f);

            pEnemy->DefaultMovePath(pPath1, vFactor, vOffset, fLifeTime);
        });

        STAGE_FINISH_CLEARED
    });

    // ################################################################
    // 
    STAGE_MAIN
    {
        STAGE_ADD_PATH(pPath1)
        {
            pPath1->Reserve(2u);
            pPath1->AddNode(coreVector2(0.0f, 1.2f), coreVector2(0.0f,-1.0f));
            pPath1->AddNode(coreVector2(0.0f,-1.2f), coreVector2(0.0f,-1.0f) * 2.5f);
            pPath1->Refine();
        });

        STAGE_ADD_SQUAD(pSquad1, cScoutEnemy, 40u)
        {
            STAGE_FOREACH_ENEMY_ALL(pSquad1, pEnemy, i)
            {
                pEnemy->Configure(20, LERP(COLOR_SHIP_YELLOW, COLOR_SHIP_RED, I_TO_F(i) * RCP(I_TO_F(pSquad1->GetNumEnemies() - 1u))), true);
                pEnemy->Resurrect();
            });
        });

        STAGE_GET_START(20u)
        STAGE_GET_INT_ARRAY(aiLane, 20u,
        {
            constexpr coreInt16 x[] = {1,0,2,3,1,2,1,2,0,2,1,3,2,1,0,1,2,3,1,2};
            std::memcpy(aiLane, x, sizeof(x));
        })
        STAGE_GET_END

        STAGE_FOREACH_ENEMY(pSquad1, pEnemy, i)
        {
            STAGE_LIFETIME(pEnemy, 0.75f, 0.4f * I_TO_F(i >> 1u) + ((i & 0x01u) ? 0.15f : 0.0f))

            STAGE_REMOVE_LIFETIME(pEnemy, pPath1->GetTotalDistance())

            coreFloat x = (aiLane[i >> 1u] * 0.667f - 1.0f) * 0.5f;
            if(i & 0x01u) x += SIGN(x) * -0.1f;

            const coreVector2 vFactor = coreVector2(1.0f,1.0f);
            const coreVector2 vOffset = coreVector2(x, 0.0f);

            pEnemy->DefaultMovePath(pPath1, vFactor, vOffset, fLifeTime);
        });

        STAGE_FINISH_CLEARED
    });

    // ################################################################
    // show clean-bonus, by making it easy to kill everything 
    STAGE_MAIN
    {
        STAGE_ADD_PATH(pPath1)
        {
            pPath1->Reserve(3u);
            pPath1->AddNode(coreVector2(-1.2f, 1.0f), coreVector2(1.0f, 0.0f));
            pPath1->AddNode(coreVector2( 0.0f, 0.3f), coreVector2(1.0f,-1.0f).Normalized() * 2.0f);
            pPath1->AddNode(coreVector2( 1.2f,-0.4f), coreVector2(1.0f, 0.0f));
            pPath1->Refine();
        });

        STAGE_ADD_SQUAD(pSquad1, cScoutEnemy, 12u)
        {
            STAGE_FOREACH_ENEMY_ALL(pSquad1, pEnemy, i)
            {
                pEnemy->Configure(20, LERP(COLOR_SHIP_YELLOW, COLOR_SHIP_RED, I_TO_F(i) * RCP(I_TO_F(pSquad1->GetNumEnemies() - 1u))), true);
                pEnemy->Resurrect();
            });
        });

        STAGE_FOREACH_ENEMY(pSquad1, pEnemy, i)
        {
            STAGE_LIFETIME(pEnemy, 0.8f, 0.2f * I_TO_F(i))

            STAGE_REMOVE_LIFETIME(pEnemy, pPath1->GetTotalDistance())

            const coreVector2 vFactor = coreVector2(((i > 5u) & 0x01u) ? -1.0f : 1.0f, 1.0f);
            const coreVector2 vOffset = coreVector2(0.0f, -0.1f * I_TO_F(i & 0x03u));

            pEnemy->DefaultMovePath(pPath1, vFactor, vOffset * vFactor, fLifeTime);
        });

        STAGE_FINISH_CLEARED
    });



            pPath3->Reserve(5u);
            pPath3->AddNode(coreVector2(-0.4f,-0.5f), coreVector2( 0.0f, 1.0f));
            pPath3->AddNode(coreVector2( 0.0f,-0.2f), coreVector2( 0.0f, 1.0f));
            pPath3->AddNode(coreVector2( 0.4f,-0.5f), coreVector2( 0.0f,-1.0f));
            pPath3->AddNode(coreVector2( 0.0f,-0.8f), coreVector2( 0.0f, 1.0f));
            pPath3->AddLoop();




    /*

    // ################################################################
    // 
    STAGE_MAIN
    {
        STAGE_ADD_PATH(pPath1)
        {
            pPath1->Reserve(2u);
            pPath1->AddNode(coreVector2(-0.8f, 1.5f), coreVector2(0.0f,-1.0f));
            pPath1->AddNode(coreVector2( 0.8f,-1.5f), coreVector2(0.0f,-1.0f));
            pPath1->Refine();
        });
        STAGE_ADD_PATH(pPath2)
        {
            pPath2->Reserve(2u);
            pPath2->AddNode(coreVector2(-1.5f, 0.2f), coreVector2(1.0f,0.0f));
            pPath2->AddNode(coreVector2( 1.5f,-0.4f), coreVector2(1.0f,0.0f));
            pPath2->Refine();
        });

        STAGE_ADD_SQUAD(pSquad1, cScoutEnemy, 10u)
        {
            STAGE_FOREACH_ENEMY_ALL(pSquad1, pEnemy, i)
            {
                pEnemy->Configure(4, (i/5u) ? COLOR_SHIP_YELLOW : COLOR_SHIP_BLUE);
                pEnemy->Resurrect();
            });
        });
        STAGE_ADD_SQUAD(pSquad2, cScoutEnemy, 10u)
        {
            STAGE_FOREACH_ENEMY_ALL(pSquad2, pEnemy, i)
            {
                pEnemy->Configure(4, (i/5u) ? COLOR_SHIP_YELLOW : COLOR_SHIP_BLUE);
                pEnemy->Resurrect();
            });
        });

        STAGE_FOREACH_ENEMY(pSquad1, pEnemy, i)
        {
            STAGE_LIFETIME(pEnemy, 1.2f, 0.3f * I_TO_F(i))

            STAGE_REMOVE_LIFETIME(pEnemy, pPath1->GetTotalDistance())

            const coreFloat   fSide   = (i/5u) ? -1.0f : 1.0f;
            const coreVector2 vFactor = coreVector2(fSide, 1.0f);
            const coreVector2 vOffset = coreVector2(0.1f * I_TO_F(i%5u - 1u) * fSide, 0.0f);

            pEnemy->DefaultMovePath(pPath1, vFactor, vOffset, fLifeTime);
        });

        STAGE_FOREACH_ENEMY(pSquad2, pEnemy, i)
        {
            STAGE_LIFETIME(pEnemy, 1.2f, 0.3f * I_TO_F(i+10u))

            STAGE_REMOVE_LIFETIME(pEnemy, pPath2->GetTotalDistance())

            const coreFloat   fSide   = (i/5u) ? -1.0f : 1.0f;
            const coreVector2 vFactor = coreVector2(fSide, 1.0f);
            const coreVector2 vOffset = coreVector2(0.0f, 0.7f - 0.1f * I_TO_F(i%5u));

            pEnemy->DefaultMovePath(pPath2, vFactor, vOffset, fLifeTime);
        });

        STAGE_FINISH_CLEARED
    });

    // ################################################################
    // 
    STAGE_MAIN
    {
        STAGE_ADD_PATH(pPath1)
        {
            pPath1->Reserve(3u);
            pPath1->AddNode(coreVector2(-0.6f, 1.5f), coreVector2(0.0f,-1.0f));
            pPath1->AddNode(coreVector2(-0.1f,-0.1f), coreVector2(1.0f,-1.0f).Normalized());
            pPath1->AddNode(coreVector2( 1.5f,-0.6f), coreVector2(1.0f, 0.0f));
            pPath1->Refine();
        });
        STAGE_ADD_PATH(pPath2)
        {
            pPath2->Reserve(3u);
            pPath2->AddNode(coreVector2(-0.6f, 1.5f).Rotated90().InvertedX(), coreVector2(0.0f,-1.0f).Rotated90().InvertedX());
            pPath2->AddNode(coreVector2(-0.1f,-0.1f).Rotated90().InvertedX(), coreVector2(1.0f,-1.0f).Rotated90().InvertedX().Normalized());
            pPath2->AddNode(coreVector2( 1.5f,-0.6f).Rotated90().InvertedX(), coreVector2(1.0f, 0.0f).Rotated90().InvertedX());
            pPath2->Refine();
        });

        STAGE_ADD_SQUAD(pSquad1, cScoutEnemy, 12u)
        {
            STAGE_FOREACH_ENEMY_ALL(pSquad1, pEnemy, i)
            {
                pEnemy->Configure(4, COLOR_SHIP_RED);
                pEnemy->Resurrect();
            });
        });

        STAGE_FOREACH_ENEMY(pSquad1, pEnemy, i)
        {
            STAGE_LIFETIME(pEnemy, 1.2f, 2.0f * I_TO_F(i/3u))

            const coreSpline2* pPath = (i >= 6u) ? pPath2 : pPath1;

            STAGE_REMOVE_LIFETIME(pEnemy, pPath->GetTotalDistance())

            const coreVector2 vFactor = coreVector2(((i%6u) >= 3u) ? -1.0f : 1.0f, 1.0f);
            const coreVector2 vOffset = coreVector2(0.2f * I_TO_F((i%3u) - 1u), ((i%3u) == 1u) ? -0.2f : 0.0f);

            pEnemy->DefaultMovePath(pPath, vFactor, vOffset, fLifeTime);

            //if(STAGE_LIFETIME_AFTER(0.3f) && STAGE_TICK_COUNTED(10u, 6u, i))
            //{
            //    const coreVector2 vPos = pEnemy->GetPosition().xy();
            //    const coreVector2 vDir = pEnemy->AimAtPlayer().Normalized();
            //
            //    g_pGame->GetBulletManagerEnemy()->AddBullet<cOrbBullet>(5, 2.0f, pEnemy, vPos, vDir);
            //}
        });

        STAGE_FINISH_CLEARED
    });

    // ################################################################
    // 
    STAGE_MAIN
    {
        STAGE_ADD_PATH(pPath1)
        {
            pPath1->Reserve(2u);
            pPath1->AddNode(coreVector2(-1.5f,0.8f), coreVector2(1.0f,0.0f));
            pPath1->AddNode(coreVector2( 1.5f,0.8f), coreVector2(1.0f,0.0f));
            pPath1->Refine();
        });

        STAGE_ADD_SQUAD(pSquad1, cScoutEnemy, 30u)
        {
            STAGE_FOREACH_ENEMY_ALL(pSquad1, pEnemy, i)
            {
                pEnemy->Configure(32, (i%10u) ? COLOR_SHIP_YELLOW : COLOR_SHIP_BLUE);
                pEnemy->Resurrect();
            });
        });

        STAGE_FOREACH_ENEMY(pSquad1, pEnemy, i)
        {
            STAGE_LIFETIME(pEnemy, 1.2f, 0.4f * I_TO_F(i) - 1.0f * I_TO_F(i/10u))

            STAGE_REMOVE_LIFETIME(pEnemy, pPath1->GetTotalDistance())

            const coreVector2 vFactor = coreVector2(((i/10u) & 0x01u) ? -1.0f : 1.0f, 1.0f);

            pEnemy->DefaultMovePath(pPath1, vFactor, coreVector2(0.0f,0.0f), fLifeTime);

            //if((i%10u) && STAGE_LIFETIME_AFTER(0.5f) && STAGE_TICK(6u))
            //{
            //    const coreVector2 vPos = pEnemy->GetPosition ().xy();
            //    const coreVector2 vDir = pEnemy->GetDirection().xy().Rotated90();
            //
            //    g_pGame->GetBulletManagerEnemy()->AddBullet<cConeBullet>(5, 1.5f, pEnemy, vPos,  vDir);
            //    g_pGame->GetBulletManagerEnemy()->AddBullet<cConeBullet>(5, 1.5f, pEnemy, vPos, -vDir);
            //}

            if((i%10u) && STAGE_LIFETIME_AFTER(0.5f) && STAGE_TICK_OFFSET(18u, (i & 0x01u) ? 9u : 0u))
            {
                g_pGame->GetEnemyManager()->AttachFunction(pEnemy, 3u, 0.05f, NULL, [](cEnemy* OUTPUT pEnemy, const coreUint8 iCurRepeat, const coreVariant16& oData)
                {
                    const coreVector2 vPos = pEnemy->GetPosition ().xy();
                    const coreVector2 vDir = pEnemy->GetDirection().xy().Rotated90();

                    g_pGame->GetBulletManagerEnemy()->AddBullet<cConeBullet>(5, 1.5f, pEnemy, vPos,  vDir);
                    g_pGame->GetBulletManagerEnemy()->AddBullet<cConeBullet>(5, 1.5f, pEnemy, vPos, -vDir);
                });
            }
        });

        STAGE_FINISH_CLEARED
    });

    */


    /*

    // ################################################################
    // 
    STAGE_MAIN
    {
        STAGE_ADD_PATH(pPath1)
        {
            pPath1->Reserve(2u);
            pPath1->AddNode(coreVector2(0.0f, 1.2f), coreVector2(0.0f,-1.0f));
            pPath1->AddNode(coreVector2(0.0f,-1.2f), coreVector2(0.0f,-1.0f) * 2.5f);
            pPath1->Refine();
        });

        STAGE_ADD_SQUAD(pSquad1, cScoutEnemy, 20u)
        {
            STAGE_FOREACH_ENEMY_ALL(pSquad1, pEnemy, i)
            {
                pEnemy->Configure(4, LERP(COLOR_SHIP_YELLOW, COLOR_SHIP_RED, I_TO_F(i & 0x03u) * 0.333f));
                pEnemy->Resurrect();
            });
        });

        STAGE_FOREACH_ENEMY(pSquad1, pEnemy, i)
        {
            STAGE_LIFETIME(pEnemy, 0.75f, 0.2f * I_TO_F(i))

            STAGE_REMOVE_LIFETIME(pEnemy, pPath1->GetTotalDistance())

            const coreVector2 vFactor = coreVector2(1.0f,1.0f);
            const coreVector2 vOffset = coreVector2(0.025f * I_TO_F(MIN(i + 8u, pSquad1->GetNumEnemies() - 1u - i + 4u)) * ((i & 0x04u) ? -1.0f : 1.0f), 0.0f);

            pEnemy->DefaultMovePath(pPath1, vFactor, vOffset, fLifeTime);
        });

        STAGE_FINISH_CLEARED
    });

    */
